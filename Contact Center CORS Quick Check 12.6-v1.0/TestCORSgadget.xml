<?xml version="1.0" encoding="UTF-8"?>
<Module>

    <ModulePrefs title=" Contact Center CORS Quick Check " 
                 description=" Contact Center CORS Quick Check " 
                 thumbnail="http://localhost:8080/">

        <Require feature="settitle" />
        <Require feature="dynamic-height" />
        <Require feature="pubsub-2" />
        <Require feature="setprefs" />
        <Locale lang="en" country="US"/>
    </ModulePrefs>

    <UserPref name="externalServerHost" />
    <Content type="html">
        <![CDATA[
            <!DOCTYPE html>
            <head>
                <script type="text/javascript">
                    const fetchAssets = (urls, cssAppend, scriptAppend, scb) => {
                        let promiseArr = [];
                        urls.forEach(url => {
                            if (url.endsWith('.css') || url.endsWith('.CSS') || url.endsWith('.cssgz') || url.endsWith('.CSSGZ')) {
                                let se = document.createElement('link');
                                 se.rel = 'stylesheet';
                                 se.type = 'text/css';
                                 se.href = url;
                                 promiseArr.push(new Promise((resolve, reject) => { se.onload = resolve; }));
                                 if (cssAppend) {
                                    document.head.appendChild(se);}
                                 else{document.head.prepend(se);}
                            } else {
                                    let se = document.createElement('script');
                                    se.type = 'text/javascript';
                                    se.src = url;
                                    se.async = false;
                                    promiseArr.push(new Promise((resolve, reject) => { se.onload = resolve; }));
                                    if (scriptAppend) {
                                        document.head.appendChild(se);}

                                    else{
                                        document.head.prepend(se); }
                                    }
                                     });

                        Promise.all(promiseArr).then(() => {
                            if (typeof scb === 'function') {
                                scb();
                            }
                        });
                    };

                    fetchAssets(['/desktop/thirdparty/bootstrap/5.3.1/css/bootstrap.css'], false, false);
                </script>


                <!-- Styling -->
                <link rel="stylesheet" href="gadget.css" type="text/css" />
                <!-- jQuery -->
                <script type="text/javascript" src="/desktop/assets/js/jquery.min.js"></script>

                <!-- Bootstrap -->
                <script type="text/javascript" src="/desktop/thirdparty/bootstrap/5.3.1/js/bootstrap.bundle.min.js"></script>
          
                <!-- Finesse Library -->
                <script type="text/javascript" src="/desktop/assets/js/finesse.js"></script>

                <!-- Helper to display messages -->
                <script type="text/javascript" src="/desktop/js/utilities/MessageDisplay.js"></script>

                <!-- Gadget Business Logic -->
                <script type="text/javascript" src="gadget.js"></script>

            </head>
            
            <body>
                <div class="container-fluid allowable-actions">
                    <br>
                    <div id="fqdn1">
                        <label for="fqdn">Insert FQDN/IP address of the targeted resource: </label>
                        <input type="fqdn" class="input" id="fqdn">
                    </div>
                    <br>                              
                    <div id="inputField" style="display: none;">
                        <br>
                        <label for="otherInput">Insert the complete URL for the destination server: </label>
                        <input type="text" id="otherInput" name="otherInput">
                    </div>
                    <br>
                    <label for="product-select">Choose which Cisco product you are testing: </label>
                            <select name="CiscoProduct" id="Product">
                                <option value="">--Please choose an option--</option>
                                <option value="finesse">Cisco Finesse</option>
                                <option value="cuic">Cisco CUIC</option>
                                <option value="3rd">Other</option>
                            </select>
                    <br>
                    <button class="btn" id="btn">Test CORS Connection</button>
                    <br>
                    <br>
                    <p id="result"></p>
                    <hr>
                </div>
            </body>

            <script type="text/javascript">
                gadgets.HubSettings.onConnect = function () {
                    finesse.modules.gadget.init();
                };
            </script>

         
        ]]>
    </Content>
</Module>